// <auto-generated />
using System;
using ExpenditureAssistant.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExpenditureAssistant.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20180619215230_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799");

            modelBuilder.Entity("ExpenditureAssistant.Model.Cheques", b =>
                {
                    b.Property<int>("ChequesID")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<string>("ChequeNumber")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("DateIssued");

                    b.Property<bool>("Status");

                    b.HasKey("ChequesID");

                    b.ToTable("Cheques");
                });

            modelBuilder.Entity("ExpenditureAssistant.Model.Departments", b =>
                {
                    b.Property<int>("DepartmentsID")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("Concurrency")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("DepartmentsID");

                    b.ToTable("Departments");

                    b.HasData(
                        new { DepartmentsID = 1, Department = "RNAC" },
                        new { DepartmentsID = 2, Department = "Midwifery" },
                        new { DepartmentsID = 3, Department = "Sports" },
                        new { DepartmentsID = 4, Department = "ICT" },
                        new { DepartmentsID = 5, Department = "Administration" },
                        new { DepartmentsID = 6, Department = "Stores/Procurement" },
                        new { DepartmentsID = 7, Department = "Kitchen" },
                        new { DepartmentsID = 8, Department = "Estate" },
                        new { DepartmentsID = 9, Department = "SRC" },
                        new { DepartmentsID = 10, Department = "Entertainment" },
                        new { DepartmentsID = 11, Department = "Exams Unit" },
                        new { DepartmentsID = 12, Department = "Psycho-motor Unit" },
                        new { DepartmentsID = 13, Department = "Nutrition" }
                    );
                });

            modelBuilder.Entity("ExpenditureAssistant.Model.Expenditure", b =>
                {
                    b.Property<int>("ExpenditureID")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<int>("ChequesID");

                    b.Property<byte[]>("Concurrency")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTime>("DateDone");

                    b.Property<int>("DepartmentsID");

                    b.Property<int>("ExpenditureItemsID");

                    b.Property<string>("Item")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("PVNumber")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ExpenditureID");

                    b.HasIndex("ChequesID");

                    b.HasIndex("DepartmentsID");

                    b.HasIndex("ExpenditureItemsID");

                    b.ToTable("Expenditures");
                });

            modelBuilder.Entity("ExpenditureAssistant.Model.ExpenditureItems", b =>
                {
                    b.Property<int>("ExpenditureItemsID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccountNumber");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("ExpenditureItemsID");

                    b.ToTable("ExpenditureItems");

                    b.HasData(
                        new { ExpenditureItemsID = 2, AccountNumber = 2112228, Description = "Academic Board Allowances" },
                        new { ExpenditureItemsID = 8, AccountNumber = 2211101, Description = "Bank Charges" },
                        new { ExpenditureItemsID = 9, AccountNumber = 2210116, Description = "Chemicals & Consumables" },
                        new { ExpenditureItemsID = 10, AccountNumber = 2210301, Description = "Cleaning Materials" },
                        new { ExpenditureItemsID = 11, AccountNumber = 2210121, Description = "Clothing and Uniform" },
                        new { ExpenditureItemsID = 12, AccountNumber = 2210108, Description = "Construction Material" },
                        new { ExpenditureItemsID = 13, AccountNumber = 2210302, Description = "Contract Cleaning Service Charges" },
                        new { ExpenditureItemsID = 14, AccountNumber = 2210107, Description = "Electrical Accessories" },
                        new { ExpenditureItemsID = 15, AccountNumber = 2210201, Description = "Electricity charges" },
                        new { ExpenditureItemsID = 16, AccountNumber = 2210703, Description = "Examination Fees and Expenses" },
                        new { ExpenditureItemsID = 17, AccountNumber = 2210113, Description = "Feeding Cost" },
                        new { ExpenditureItemsID = 18, AccountNumber = 2210503, Description = "Fuel & Lubricants - Official Vehicles" },
                        new { ExpenditureItemsID = 3, AccountNumber = 2112234, Description = "Fuel Allowance" },
                        new { ExpenditureItemsID = 19, AccountNumber = 2210705, Description = "Hotel Accommodation" },
                        new { ExpenditureItemsID = 20, AccountNumber = 2210404, Description = "Hotel Accommodations" },
                        new { ExpenditureItemsID = 21, AccountNumber = 2821001, Description = "Insurance and compensation" },
                        new { ExpenditureItemsID = 22, AccountNumber = 2210511, Description = "Local travel cost" },
                        new { ExpenditureItemsID = 23, AccountNumber = 2210502, Description = "Maintenance & Repairs - Official Vehicles" },
                        new { ExpenditureItemsID = 24, AccountNumber = 2210604, Description = "Maintenance of Furniture & Fixtures" },
                        new { ExpenditureItemsID = 25, AccountNumber = 2210605, Description = "Maintenance of Machinery & Plant" },
                        new { ExpenditureItemsID = 27, AccountNumber = 2210104, Description = "Medical Supplies" },
                        new { ExpenditureItemsID = 4, AccountNumber = 2111102, Description = "Monthly paid & casual labour" },
                        new { ExpenditureItemsID = 28, AccountNumber = 2210510, Description = "Night allowances" },
                        new { ExpenditureItemsID = 26, AccountNumber = 2210805, Description = "Materials and Consumables (Reimbursable)" },
                        new { ExpenditureItemsID = 29, AccountNumber = 2210102, Description = "Office Facilities, Supplies & Accessories" },
                        new { ExpenditureItemsID = 30, AccountNumber = 2210111, Description = "Other Office Materials and Consumables" },
                        new { ExpenditureItemsID = 31, AccountNumber = 2210509, Description = "Other Travel & Transportation" },
                        new { ExpenditureItemsID = 5, AccountNumber = 2112247, Description = "Overtime" },
                        new { ExpenditureItemsID = 6, AccountNumber = 2112238, Description = "Overtime Allowance" },
                        new { ExpenditureItemsID = 32, AccountNumber = 2210101, Description = "Printed Material & Stationery" },
                        new { ExpenditureItemsID = 33, AccountNumber = 2821002, Description = "Professional fees" },
                        new { ExpenditureItemsID = 52, AccountNumber = 2310018, Description = "Purchase of Motor Bike, bicycles etc" },
                        new { ExpenditureItemsID = 53, AccountNumber = 2310019, Description = "Purchase of Plant & Equipment" },
                        new { ExpenditureItemsID = 34, AccountNumber = 2210707, Description = "Recruitment Expenses" },
                        new { ExpenditureItemsID = 35, AccountNumber = 2210708, Description = "Refreshments" },
                        new { ExpenditureItemsID = 36, AccountNumber = 2210407, Description = "Rental of Other Transport" },
                        new { ExpenditureItemsID = 37, AccountNumber = 2210406, Description = "Rental of Vehicles" },
                        new { ExpenditureItemsID = 38, AccountNumber = 2210603, Description = "Repairs of Office Buildings" },
                        new { ExpenditureItemsID = 39, AccountNumber = 2210602, Description = "Repairs of Residential Buildings" },
                        new { ExpenditureItemsID = 40, AccountNumber = 2210402, Description = "Residential Accommodations" },
                        new { ExpenditureItemsID = 41, AccountNumber = 2210601, Description = "Roads, Driveways & Grounds" },
                        new { ExpenditureItemsID = 42, AccountNumber = 2210505, Description = "Running Cost - Official Vehicles" },
                        new { ExpenditureItemsID = 43, AccountNumber = 2210709, Description = "Seminars/Conferences/Workshops/Meetings Expenses" },
                        new { ExpenditureItemsID = 44, AccountNumber = 2210710, Description = "Staff Development" },
                        new { ExpenditureItemsID = 45, AccountNumber = 2731102, Description = "Staff Welfare Expenses" },
                        new { ExpenditureItemsID = 46, AccountNumber = 2210117, Description = "Teaching & Learning Materials" },
                        new { ExpenditureItemsID = 47, AccountNumber = 2210203, Description = "Telecommunications" },
                        new { ExpenditureItemsID = 48, AccountNumber = 2210115, Description = "Textbooks & Library Books" },
                        new { ExpenditureItemsID = 49, AccountNumber = 2210701, Description = "Training Materials" },
                        new { ExpenditureItemsID = 7, AccountNumber = 2112242, Description = "Travel Allowance" },
                        new { ExpenditureItemsID = 50, AccountNumber = 2210112, Description = "Uniform and Protective Clothing" },
                        new { ExpenditureItemsID = 51, AccountNumber = 2210202, Description = "Water" }
                    );
                });

            modelBuilder.Entity("ExpenditureAssistant.Model.Expenditure", b =>
                {
                    b.HasOne("ExpenditureAssistant.Model.Cheques", "Cheques")
                        .WithMany("Expenditures")
                        .HasForeignKey("ChequesID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ExpenditureAssistant.Model.Departments", "Departments")
                        .WithMany("Expenditure")
                        .HasForeignKey("DepartmentsID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ExpenditureAssistant.Model.ExpenditureItems", "ExpenditureItems")
                        .WithMany("Expenditures")
                        .HasForeignKey("ExpenditureItemsID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
