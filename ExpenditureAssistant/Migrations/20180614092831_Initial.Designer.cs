// <auto-generated />
using System;
using ExpenditureAssistant.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ExpenditureAssistant.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20180614092831_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799");

            modelBuilder.Entity("ExpenditureAssistant.Model.Cheques", b =>
                {
                    b.Property<int>("ChequesID")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<string>("ChequeNumber")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("DateIssued");

                    b.Property<bool>("Status");

                    b.HasKey("ChequesID");

                    b.ToTable("Cheques");
                });

            modelBuilder.Entity("ExpenditureAssistant.Model.Departments", b =>
                {
                    b.Property<int>("DepartmentsID")
                        .ValueGeneratedOnAdd();

                    b.Property<byte[]>("Concurrency")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<string>("Department")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("DepartmentsID");

                    b.ToTable("Departments");

                    b.HasData(
                        new { DepartmentsID = 1, Department = "RNAC" },
                        new { DepartmentsID = 2, Department = "Midwifery" },
                        new { DepartmentsID = 3, Department = "Sports" },
                        new { DepartmentsID = 4, Department = "ICT" },
                        new { DepartmentsID = 5, Department = " Administration" },
                        new { DepartmentsID = 6, Department = "Stores/Procurement" },
                        new { DepartmentsID = 7, Department = "Kitchen" },
                        new { DepartmentsID = 8, Department = "Estate" },
                        new { DepartmentsID = 9, Department = "Sports" },
                        new { DepartmentsID = 10, Department = "Entertainment" },
                        new { DepartmentsID = 11, Department = "Exams Unit" },
                        new { DepartmentsID = 12, Department = "Skills Unit" }
                    );
                });

            modelBuilder.Entity("ExpenditureAssistant.Model.Expenditure", b =>
                {
                    b.Property<int>("ExpenditureID")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount");

                    b.Property<int>("ChequesID");

                    b.Property<byte[]>("Concurrency")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.Property<DateTime>("DateDone");

                    b.Property<int>("DepartmentsID");

                    b.Property<string>("Item")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("PVNumber")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("ExpenditureID");

                    b.HasIndex("ChequesID");

                    b.HasIndex("DepartmentsID");

                    b.ToTable("Expenditures");
                });

            modelBuilder.Entity("ExpenditureAssistant.Model.Expenditure", b =>
                {
                    b.HasOne("ExpenditureAssistant.Model.Cheques", "Cheques")
                        .WithMany("Expenditures")
                        .HasForeignKey("ChequesID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ExpenditureAssistant.Model.Departments", "Departments")
                        .WithMany("Expenditure")
                        .HasForeignKey("DepartmentsID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
